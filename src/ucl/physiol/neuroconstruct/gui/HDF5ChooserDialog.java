/*
 * HDF5ChooserDialog.java
 *
 * Created on 25 February 2008, 15:50
 */

package ucl.physiol.neuroconstruct.gui;

import java.io.*;
import java.util.*;


import ncsa.hdf.object.*;
import ncsa.hdf.object.h5.*;


import ucl.physiol.neuroconstruct.dataset.*;
import ucl.physiol.neuroconstruct.gui.plotter.*;
import ucl.physiol.neuroconstruct.neuroml.hdf5.*;
import ucl.physiol.neuroconstruct.utils.*;

/**
 *
 * @author  Padraig
 */

public class HDF5ChooserDialog extends javax.swing.JDialog 
{
    private static final long serialVersionUID = -154251755576893475L;
    
    private static transient ClassLogger logger = new ClassLogger("Cell");
    
    boolean standalone =false;
    
    String SELECT_INFO="-- Please select from list below --";
    
    
    /** Creates new form HDF5ChooserDialog */
    public HDF5ChooserDialog(java.awt.Frame parent, boolean modal, File hdf5File) {
        super(parent, modal);
        initComponents();
        
        this.setTitle("Datasets present in HDF5 file: "+ hdf5File.getAbsolutePath());
        
        try
        {
            H5File h5 = Hdf5Utils.openH5file(hdf5File);

            Group g = Hdf5Utils.getRootGroup(h5);

            boolean plotToo = true;

            ArrayList<DataSet> dataSets = Hdf5Utils.parseGroupForDatasets(g, plotToo);

            StringBuffer summary = new StringBuffer("Number of DataSets found in file: "+ hdf5File.getAbsolutePath()+": "+dataSets.size()+"\n\n");
            
            this.jTextAreaMain.setText(summary.toString());
            
            this.jComboBox1.addItem(SELECT_INFO);
            
            for(DataSet ds: dataSets)
            {
                DataSetHolder dsh = new DataSetHolder(ds);
                this.jComboBox1.addItem(dsh);
                //summary.append(ds.toString()+"\n"+ds.getDescription()+"\n\n");
            }
        }
        catch(Exception e)
        {
            this.jTextAreaMain.setText("An error occured loading information from file: "+ hdf5File+"\n" +
                "Information:\n\n"+e.getMessage());
        }
        
        
        
    }
    
    private class DataSetHolder
    {
        private DataSetHolder(){};
        
        public DataSetHolder(DataSet ds)
        {
            this.ds = ds;
        };
        
        protected DataSet ds;
        
        @Override
        public String toString()
        {
            return ds.getRefrence();
        }
            
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaMain = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jButtonPlot = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6), javax.swing.BorderFactory.createEtchedBorder()));
        jScrollPane1.setRequestFocusEnabled(false);

        jTextAreaMain.setColumns(80);
        jTextAreaMain.setRows(30);
        jScrollPane1.setViewportView(jTextAreaMain);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jComboBox1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jComboBox1.setMinimumSize(new java.awt.Dimension(200, 20));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jPanel3.add(jComboBox1);

        jPanel2.add(jPanel3, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setMaximumSize(new java.awt.Dimension(200, 200));

        jButtonPlot.setText("Plot");
        jButtonPlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlotActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonPlot);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        
        this.dispose();
        
        if (standalone) System.exit(0);
        
}//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonPlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlotActionPerformed
        
        if (jComboBox1.getSelectedItem()==null || jComboBox1.getSelectedItem().equals(SELECT_INFO))
        {
            return;
        }
        
        if (jComboBox1.getSelectedItem() instanceof DataSetHolder)
        {
            DataSetHolder dsh = (DataSetHolder)jComboBox1.getSelectedItem();

            PlotterFrame frame = PlotManager.getPlotterFrame("Data from: " + dsh.ds.getRefrence(), false, false);
            
            frame.addDataSet(dsh.ds);

            frame.setVisible(true);
        }
        
}//GEN-LAST:event_jButtonPlotActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
        {
            logger.logComment("Item selected: "+ evt.getItem());
            
            if (evt.getItem() instanceof DataSetHolder)
            {
                DataSet ds = ((DataSetHolder)evt.getItem()).ds;

                this.jTextAreaMain.setText(ds.getDescription());
            }
            
        }
       
    }//GEN-LAST:event_jComboBox1ItemStateChanged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                File f = new File("../temp/ep0601aa.hdf5");
                    
                    
                HDF5ChooserDialog dialog = new HDF5ChooserDialog(new javax.swing.JFrame(), false, f);
                dialog.standalone = true;
                
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonPlot;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaMain;
    // End of variables declaration//GEN-END:variables
    
}
