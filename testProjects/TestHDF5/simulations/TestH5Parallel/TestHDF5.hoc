//  ******************************************************
// 
//     File generated by: neuroConstruct v1.5.1
// 
//  ******************************************************

{load_file("nrngui.hoc")}
{startsw()}

objectvar allCells
{allCells = new List()}

{nC = 1}

{load_file("nCtools.hoc")}
{load_file("cellCheck.hoc")}
objref strFuncs
{strFuncs = new StringFunctions()}
strdef host
{system("hostname", host)}
if (strFuncs.len(host)>0) {
    strFuncs.left(host, strFuncs.len(host)-1) 
} else {
    host = "????" 
}

ncell = 12

{load_file("netparmpi.hoc")}
objref pnm
{pnm = new ParallelNetManager(ncell)}

{hostid = pnm.pc.id}


{use_mcell_ran4(1)}

{mcell_ran4_init(568002291 + hostid)}
func getCellGlobalId() {

    if (strcmp($s1,"CellGroup_2")==0) {
        cgid = 0 + $2
    }

    if (strcmp($s1,"SampleCellGroup")==0) {
        cgid = 4 + $2
    }

    return cgid
}

{pnm.set_gid2node(getCellGlobalId("CellGroup_2", 0), 0)}
{pnm.set_gid2node(getCellGlobalId("CellGroup_2", 1), 1)}
{pnm.set_gid2node(getCellGlobalId("CellGroup_2", 2), 2)}
{pnm.set_gid2node(getCellGlobalId("CellGroup_2", 3), 3)}
{pnm.set_gid2node(getCellGlobalId("SampleCellGroup", 0), 0)}
{pnm.set_gid2node(getCellGlobalId("SampleCellGroup", 1), 1)}
{pnm.set_gid2node(getCellGlobalId("SampleCellGroup", 2), 2)}
{pnm.set_gid2node(getCellGlobalId("SampleCellGroup", 3), 3)}
{pnm.set_gid2node(getCellGlobalId("SampleCellGroup", 4), 0)}
{pnm.set_gid2node(getCellGlobalId("SampleCellGroup", 5), 1)}
{pnm.set_gid2node(getCellGlobalId("SampleCellGroup", 6), 2)}
{pnm.set_gid2node(getCellGlobalId("SampleCellGroup", 7), 3)}

func isCellOnNode() {

    cellgid = getCellGlobalId($s1, $2)
    return pnm.gid_exists(cellgid)!=0
}


{ load_file("SampleCell.hoc") }
{n_SampleCellGroup = 8}

{n_SampleCellGroup_local = 0 } // actual number created on this host

objectvar a_SampleCellGroup[n_SampleCellGroup]

for i = 0, n_SampleCellGroup-1 {
    if(isCellOnNode("SampleCellGroup", i)) {
        strdef reference, type, description
        sprint(reference, "SampleCellGroup_%d", i)
        sprint(type, "SampleCell")
        sprint(description, "A Simple cell for testing purposes")
        a_SampleCellGroup[i] = new SampleCell(reference, type, description)
        pnm.register_cell(getCellGlobalId("SampleCellGroup", i), a_SampleCellGroup[i])
        allCells.append(a_SampleCellGroup[i])
        n_SampleCellGroup_local = n_SampleCellGroup_local + 1 

    }
}

if (isCellOnNode("SampleCellGroup", 0)) {a_SampleCellGroup[0].position(59.117138,75.081436,340.0188)}
if (isCellOnNode("SampleCellGroup", 1)) {a_SampleCellGroup[1].position(66.59281,65.00241,214.34277)}
if (isCellOnNode("SampleCellGroup", 2)) {a_SampleCellGroup[2].position(134.01044,65.76641,478.98395)}
if (isCellOnNode("SampleCellGroup", 3)) {a_SampleCellGroup[3].position(355.1345,89.400764,208.22925)}
if (isCellOnNode("SampleCellGroup", 4)) {a_SampleCellGroup[4].position(379.62042,46.409065,440.8053)}
if (isCellOnNode("SampleCellGroup", 5)) {a_SampleCellGroup[5].position(446.6858,56.92076,208.07907)}
if (isCellOnNode("SampleCellGroup", 6)) {a_SampleCellGroup[6].position(219.75801,49.975616,90.36621)}
if (isCellOnNode("SampleCellGroup", 7)) {a_SampleCellGroup[7].position(35.403072,17.85431,298.24542)}

{ load_file("Granule_98.hoc") }
{n_CellGroup_2 = 4}

{n_CellGroup_2_local = 0 } // actual number created on this host

objectvar a_CellGroup_2[n_CellGroup_2]

for i = 0, n_CellGroup_2-1 {
    if(isCellOnNode("CellGroup_2", i)) {
        strdef reference, type, description
        sprint(reference, "CellGroup_2_%d", i)
        sprint(type, "Granule_98")
        sprint(description, "An implementation using ChannelML of the Granule cell mode from Maex, R and De Schutter, E. Synchronization of Golgi and Granule Cell Firing in a Detailed Network Model of the Cerebellar Granule Cell Layer, 1998")
        a_CellGroup_2[i] = new Granule_98(reference, type, description)
        pnm.register_cell(getCellGlobalId("CellGroup_2", i), a_CellGroup_2[i])
        allCells.append(a_CellGroup_2[i])
        n_CellGroup_2_local = n_CellGroup_2_local + 1 

    }
}

if (isCellOnNode("CellGroup_2", 0)) {a_CellGroup_2[0].position(97.55847,175.94403,442.94516)}
if (isCellOnNode("CellGroup_2", 1)) {a_CellGroup_2[1].position(366.71393,162.19223,191.37907)}
if (isCellOnNode("CellGroup_2", 2)) {a_CellGroup_2[2].position(482.04703,183.21616,39.865555)}
if (isCellOnNode("CellGroup_2", 3)) {a_CellGroup_2[3].position(240.55234,107.68588,69.77034)}



strdef simConfig
{simConfig = "Default Simulation Configuration"}
{celsius = 32.0}




proc initialiseValues0() {

    for i = 0, n_SampleCellGroup-1 {
        if(isCellOnNode("SampleCellGroup", i)) forsec a_SampleCellGroup[i].all  v = -65.0

    }

    for i = 0, n_CellGroup_2-1 {
        if(isCellOnNode("CellGroup_2", i)) forsec a_CellGroup_2[i].all  v = -65.0

    }

}

objref fih0
{fih0 = new FInitializeHandler(0, "initialiseValues0()")}


proc initialiseValues1() {

    for i = 0, n_CellGroup_2-1 {
      if(isCellOnNode("CellGroup_2", i)) {
        forsec a_CellGroup_2[i].all { eh = -42.0}
        forsec a_CellGroup_2[i].all { ek = -90.0}
        forsec a_CellGroup_2[i].all {
            cai = 7.55E-5
            cao = 2.4
        }
        forsec a_CellGroup_2[i].all { ena = 55.0}
      }
    }

}

objref fih1
{fih1 = new FInitializeHandler(1, "initialiseValues1()")}



objectvar allCurrentNetConns
allCurrentNetConns = new List()



objectvar syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[32]

objectvar syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[32]

localSynapseId = -2
globalPreSynId = 100000000 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[0] = new MF_AMPA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[0] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 0)) {
    {pnm.pc.set_gid2node(globalPreSynId, hostid)}
    a_SampleCellGroup[0].mainAxonSec syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[0] = new NetCon(&v(0.2437877), nil)
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[0].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[0].weight = 0.48847252 // not really needed on the pre side
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[0].threshold = -20.0

    pnm.pc.cell(globalPreSynId, syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[0])
    allCurrentNetConns.append(syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[0])
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000000

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[0] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[0].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[0].weight = 0.48847252
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[0].threshold = -20.0

} else {
}
objectvar syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[32]

objectvar syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[32]

localSynapseId = -2
globalPreSynId = 100000001 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[0] = new NMDA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[0] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 0)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000000

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[0] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[0].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[0].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[0].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000002 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[1] = new MF_AMPA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[1] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 0)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000000

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[1] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[1].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[1].weight = 0.9564062
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[1].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000003 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[1] = new NMDA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[1] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 0)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000000

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[1] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[1].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[1].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[1].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000004 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[2] = new MF_AMPA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[2] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 0)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000000

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[2] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[2].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[2].weight = 0.9957643
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[2].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000005 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[2] = new NMDA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[2] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 0)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000000

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[2] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[2].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[2].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[2].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000006 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[3] = new MF_AMPA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[3] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 0)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000000

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[3] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[3].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[3].weight = 0.84554017
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[3].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000007 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[3] = new NMDA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[3] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 0)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000000

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[3] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[3].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[3].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[3].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000008 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[4] = new MF_AMPA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[4] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 1)) {
    {pnm.pc.set_gid2node(globalPreSynId, hostid)}
    a_SampleCellGroup[1].mainAxonSec syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[4] = new NetCon(&v(0.28142416), nil)
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[4].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[4].weight = 0.5074165 // not really needed on the pre side
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[4].threshold = -20.0

    pnm.pc.cell(globalPreSynId, syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[4])
    allCurrentNetConns.append(syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[4])
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000008

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[4] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[4].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[4].weight = 0.5074165
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[4].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000009 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[4] = new NMDA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[4] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 1)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000008

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[4] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[4].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[4].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[4].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000010 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[5] = new MF_AMPA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[5] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 1)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000008

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[5] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[5].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[5].weight = 0.1486361
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[5].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000011 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[5] = new NMDA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[5] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 1)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000008

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[5] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[5].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[5].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[5].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000012 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[6] = new MF_AMPA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[6] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 1)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000008

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[6] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[6].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[6].weight = 0.4505502
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[6].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000013 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[6] = new NMDA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[6] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 1)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000008

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[6] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[6].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[6].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[6].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000014 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[7] = new MF_AMPA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[7] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 1)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000008

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[7] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[7].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[7].weight = 0.44009995
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[7].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000015 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[7] = new NMDA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[7] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 1)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000008

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[7] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[7].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[7].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[7].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000016 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[8] = new MF_AMPA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[8] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 2)) {
    {pnm.pc.set_gid2node(globalPreSynId, hostid)}
    a_SampleCellGroup[2].mainAxonSec syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[8] = new NetCon(&v(0.49926293), nil)
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[8].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[8].weight = 0.42945683 // not really needed on the pre side
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[8].threshold = -20.0

    pnm.pc.cell(globalPreSynId, syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[8])
    allCurrentNetConns.append(syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[8])
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000016

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[8] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[8].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[8].weight = 0.42945683
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[8].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000017 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[8] = new NMDA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[8] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 2)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000016

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[8] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[8].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[8].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[8].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000018 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[9] = new MF_AMPA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[9] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 2)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000016

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[9] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[9].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[9].weight = 0.632794
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[9].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000019 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[9] = new NMDA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[9] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 2)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000016

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[9] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[9].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[9].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[9].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000020 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[10] = new MF_AMPA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[10] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 2)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000016

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[10] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[10].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[10].weight = 0.9429349
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[10].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000021 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[10] = new NMDA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[10] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 2)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000016

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[10] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[10].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[10].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[10].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000022 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[11] = new MF_AMPA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[11] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 2)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000016

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[11] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[11].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[11].weight = 0.92681754
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[11].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000023 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[11] = new NMDA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[11] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 2)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000016

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[11] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[11].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[11].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[11].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000024 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[12] = new MF_AMPA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[12] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 3)) {
    {pnm.pc.set_gid2node(globalPreSynId, hostid)}
    a_SampleCellGroup[3].mainAxonSec syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[12] = new NetCon(&v(0.57328975), nil)
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[12].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[12].weight = 0.8578269 // not really needed on the pre side
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[12].threshold = -20.0

    pnm.pc.cell(globalPreSynId, syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[12])
    allCurrentNetConns.append(syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[12])
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000024

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[12] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[12].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[12].weight = 0.8578269
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[12].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000025 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[12] = new NMDA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[12] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 3)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000024

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[12] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[12].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[12].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[12].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000026 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[13] = new MF_AMPA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[13] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 3)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000024

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[13] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[13].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[13].weight = 0.14371419
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[13].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000027 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[13] = new NMDA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[13] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 3)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000024

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[13] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[13].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[13].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[13].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000028 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[14] = new MF_AMPA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[14] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 3)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000024

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[14] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[14].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[14].weight = 0.7578054
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[14].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000029 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[14] = new NMDA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[14] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 3)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000024

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[14] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[14].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[14].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[14].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000030 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[15] = new MF_AMPA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[15] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 3)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000024

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[15] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[15].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[15].weight = 0.74337786
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[15].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000031 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[15] = new NMDA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[15] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 3)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000024

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[15] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[15].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[15].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[15].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000032 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[16] = new MF_AMPA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[16] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 4)) {
    {pnm.pc.set_gid2node(globalPreSynId, hostid)}
    a_SampleCellGroup[4].mainAxonSec syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[16] = new NetCon(&v(0.33557987), nil)
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[16].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[16].weight = 0.8694642 // not really needed on the pre side
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[16].threshold = -20.0

    pnm.pc.cell(globalPreSynId, syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[16])
    allCurrentNetConns.append(syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[16])
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000032

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[16] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[16].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[16].weight = 0.8694642
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[16].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000033 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[16] = new NMDA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[16] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 4)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000032

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[16] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[16].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[16].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[16].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000034 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[17] = new MF_AMPA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[17] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 4)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000032

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[17] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[17].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[17].weight = 0.4820611
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[17].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000035 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[17] = new NMDA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[17] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 4)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000032

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[17] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[17].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[17].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[17].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000036 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[18] = new MF_AMPA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[18] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 4)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000032

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[18] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[18].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[18].weight = 0.25703079
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[18].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000037 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[18] = new NMDA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[18] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 4)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000032

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[18] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[18].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[18].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[18].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000038 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[19] = new MF_AMPA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[19] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 4)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000032

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[19] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[19].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[19].weight = 0.2372737
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[19].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000039 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[19] = new NMDA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[19] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 4)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000032

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[19] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[19].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[19].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[19].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000040 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[20] = new MF_AMPA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[20] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 5)) {
    {pnm.pc.set_gid2node(globalPreSynId, hostid)}
    a_SampleCellGroup[5].mainAxonSec syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[20] = new NetCon(&v(0.7953033), nil)
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[20].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[20].weight = 0.3725211 // not really needed on the pre side
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[20].threshold = -20.0

    pnm.pc.cell(globalPreSynId, syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[20])
    allCurrentNetConns.append(syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[20])
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000040

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[20] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[20].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[20].weight = 0.3725211
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[20].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000041 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[20] = new NMDA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[20] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 5)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000040

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[20] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[20].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[20].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[20].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000042 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[21] = new MF_AMPA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[21] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 5)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000040

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[21] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[21].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[21].weight = 0.9989916
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[21].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000043 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[21] = new NMDA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[21] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 5)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000040

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[21] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[21].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[21].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[21].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000044 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[22] = new MF_AMPA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[22] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 5)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000040

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[22] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[22].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[22].weight = 0.84991807
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[22].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000045 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[22] = new NMDA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[22] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 5)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000040

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[22] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[22].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[22].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[22].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000046 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[23] = new MF_AMPA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[23] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 5)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000040

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[23] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[23].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[23].weight = 0.40647942
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[23].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000047 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[23] = new NMDA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[23] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 5)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000040

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[23] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[23].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[23].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[23].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000048 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[24] = new MF_AMPA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[24] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 6)) {
    {pnm.pc.set_gid2node(globalPreSynId, hostid)}
    a_SampleCellGroup[6].mainAxonSec syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[24] = new NetCon(&v(0.50842273), nil)
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[24].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[24].weight = 0.6399615 // not really needed on the pre side
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[24].threshold = -20.0

    pnm.pc.cell(globalPreSynId, syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[24])
    allCurrentNetConns.append(syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[24])
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000048

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[24] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[24].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[24].weight = 0.6399615
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[24].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000049 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[24] = new NMDA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[24] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 6)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000048

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[24] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[24].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[24].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[24].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000050 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[25] = new MF_AMPA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[25] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 6)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000048

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[25] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[25].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[25].weight = 0.49616122
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[25].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000051 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[25] = new NMDA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[25] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 6)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000048

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[25] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[25].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[25].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[25].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000052 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[26] = new MF_AMPA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[26] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 6)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000048

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[26] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[26].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[26].weight = 0.19639528
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[26].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000053 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 2)) {
    a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[26] = new NMDA(0.5)
    a_CellGroup_2[2].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[26] )
    localSynapseId = a_CellGroup_2[2].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 6)) {
} else {
}
if (isCellOnNode("CellGroup_2", 2)) {
    gidOfSource = 100000048

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[26] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[2].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[26].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[26].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[26].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000054 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[27] = new MF_AMPA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[27] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 6)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000048

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[27] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[27].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[27].weight = 0.51836014
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[27].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000055 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[27] = new NMDA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[27] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 6)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000048

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[27] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[27].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[27].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[27].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000056 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[28] = new MF_AMPA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[28] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 7)) {
    {pnm.pc.set_gid2node(globalPreSynId, hostid)}
    a_SampleCellGroup[7].mainAxonSec syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[28] = new NetCon(&v(0.1437428), nil)
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[28].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[28].weight = 0.4450258 // not really needed on the pre side
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[28].threshold = -20.0

    pnm.pc.cell(globalPreSynId, syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[28])
    allCurrentNetConns.append(syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[28])
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000056

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[28] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[28].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[28].weight = 0.4450258
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[28].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000057 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 0)) {
    a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[28] = new NMDA(0.5)
    a_CellGroup_2[0].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[28] )
    localSynapseId = a_CellGroup_2[0].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 7)) {
} else {
}
if (isCellOnNode("CellGroup_2", 0)) {
    gidOfSource = 100000056

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[28] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[0].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[28].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[28].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[28].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000058 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[29] = new MF_AMPA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[29] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 7)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000056

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[29] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[29].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[29].weight = 0.77935594
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[29].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000059 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[29] = new NMDA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[29] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 7)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000056

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[29] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[29].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[29].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[29].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000060 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[30] = new MF_AMPA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[30] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 7)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000056

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[30] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[30].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[30].weight = 0.6937032
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[30].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000061 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 3)) {
    a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[30] = new NMDA(0.5)
    a_CellGroup_2[3].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[30] )
    localSynapseId = a_CellGroup_2[3].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 7)) {
} else {
}
if (isCellOnNode("CellGroup_2", 3)) {
    gidOfSource = 100000056

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[30] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[3].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[30].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[30].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[30].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000062 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[31] = new MF_AMPA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[31] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 7)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000056

    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[31] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[31].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[31].weight = 0.47009677
    syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA_temp[31].threshold = -20.0

} else {
}
localSynapseId = -2
globalPreSynId = 100000063 // provisional gid for NetCon
if (isCellOnNode("CellGroup_2", 1)) {
    a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[31] = new NMDA(0.5)
    a_CellGroup_2[1].synlist.append( syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[31] )
    localSynapseId = a_CellGroup_2[1].synlist.count()-1
} else {
}
if (isCellOnNode("SampleCellGroup", 7)) {
} else {
}
if (isCellOnNode("CellGroup_2", 1)) {
    gidOfSource = 100000056

    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[31] = pnm.pc.gid_connect(gidOfSource, a_CellGroup_2[1].synlist.object(localSynapseId))
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[31].delay = 5.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[31].weight = 1.0
    syn_NetConn_SampleCellGroup_CellGroup_2_NMDA_temp[31].threshold = -20.0

} else {
}
n_SampleIClamp = 8 

objref spikesource_SampleIClamp[n_SampleIClamp]

objref synapse_SampleIClamp[n_SampleIClamp]
objref connection_SampleIClamp[n_SampleIClamp]
thresh = -20
delay = 0
weight = 1

if (isCellOnNode("SampleCellGroup", 0)) {
    access a_SampleCellGroup[0].Soma 
    spikesource_SampleIClamp[0] = new NetStim(0.5)
    spikesource_SampleIClamp[0].number = 400.0
    spikesource_SampleIClamp[0].interval = 20.0
    spikesource_SampleIClamp[0].noise = 1.0 
    spikesource_SampleIClamp[0].start = 0 
    synapse_SampleIClamp[0] = new DoubExpSyn(0.5) 
    connection_SampleIClamp[0] = new NetCon(spikesource_SampleIClamp[0], synapse_SampleIClamp[0], thresh, delay, weight)
}


if (isCellOnNode("SampleCellGroup", 1)) {
    access a_SampleCellGroup[1].Soma 
    spikesource_SampleIClamp[1] = new NetStim(0.5)
    spikesource_SampleIClamp[1].number = 400.0
    spikesource_SampleIClamp[1].interval = 20.0
    spikesource_SampleIClamp[1].noise = 1.0 
    spikesource_SampleIClamp[1].start = 0 
    synapse_SampleIClamp[1] = new DoubExpSyn(0.5) 
    connection_SampleIClamp[1] = new NetCon(spikesource_SampleIClamp[1], synapse_SampleIClamp[1], thresh, delay, weight)
}


if (isCellOnNode("SampleCellGroup", 2)) {
    access a_SampleCellGroup[2].Soma 
    spikesource_SampleIClamp[2] = new NetStim(0.5)
    spikesource_SampleIClamp[2].number = 400.0
    spikesource_SampleIClamp[2].interval = 20.0
    spikesource_SampleIClamp[2].noise = 1.0 
    spikesource_SampleIClamp[2].start = 0 
    synapse_SampleIClamp[2] = new DoubExpSyn(0.5) 
    connection_SampleIClamp[2] = new NetCon(spikesource_SampleIClamp[2], synapse_SampleIClamp[2], thresh, delay, weight)
}


if (isCellOnNode("SampleCellGroup", 3)) {
    access a_SampleCellGroup[3].Soma 
    spikesource_SampleIClamp[3] = new NetStim(0.5)
    spikesource_SampleIClamp[3].number = 400.0
    spikesource_SampleIClamp[3].interval = 20.0
    spikesource_SampleIClamp[3].noise = 1.0 
    spikesource_SampleIClamp[3].start = 0 
    synapse_SampleIClamp[3] = new DoubExpSyn(0.5) 
    connection_SampleIClamp[3] = new NetCon(spikesource_SampleIClamp[3], synapse_SampleIClamp[3], thresh, delay, weight)
}


if (isCellOnNode("SampleCellGroup", 4)) {
    access a_SampleCellGroup[4].Soma 
    spikesource_SampleIClamp[4] = new NetStim(0.5)
    spikesource_SampleIClamp[4].number = 400.0
    spikesource_SampleIClamp[4].interval = 20.0
    spikesource_SampleIClamp[4].noise = 1.0 
    spikesource_SampleIClamp[4].start = 0 
    synapse_SampleIClamp[4] = new DoubExpSyn(0.5) 
    connection_SampleIClamp[4] = new NetCon(spikesource_SampleIClamp[4], synapse_SampleIClamp[4], thresh, delay, weight)
}


if (isCellOnNode("SampleCellGroup", 5)) {
    access a_SampleCellGroup[5].Soma 
    spikesource_SampleIClamp[5] = new NetStim(0.5)
    spikesource_SampleIClamp[5].number = 400.0
    spikesource_SampleIClamp[5].interval = 20.0
    spikesource_SampleIClamp[5].noise = 1.0 
    spikesource_SampleIClamp[5].start = 0 
    synapse_SampleIClamp[5] = new DoubExpSyn(0.5) 
    connection_SampleIClamp[5] = new NetCon(spikesource_SampleIClamp[5], synapse_SampleIClamp[5], thresh, delay, weight)
}


if (isCellOnNode("SampleCellGroup", 6)) {
    access a_SampleCellGroup[6].Soma 
    spikesource_SampleIClamp[6] = new NetStim(0.5)
    spikesource_SampleIClamp[6].number = 400.0
    spikesource_SampleIClamp[6].interval = 20.0
    spikesource_SampleIClamp[6].noise = 1.0 
    spikesource_SampleIClamp[6].start = 0 
    synapse_SampleIClamp[6] = new DoubExpSyn(0.5) 
    connection_SampleIClamp[6] = new NetCon(spikesource_SampleIClamp[6], synapse_SampleIClamp[6], thresh, delay, weight)
}


if (isCellOnNode("SampleCellGroup", 7)) {
    access a_SampleCellGroup[7].Soma 
    spikesource_SampleIClamp[7] = new NetStim(0.5)
    spikesource_SampleIClamp[7].number = 400.0
    spikesource_SampleIClamp[7].interval = 20.0
    spikesource_SampleIClamp[7].noise = 1.0 
    spikesource_SampleIClamp[7].start = 0 
    synapse_SampleIClamp[7] = new DoubExpSyn(0.5) 
    connection_SampleIClamp[7] = new NetCon(spikesource_SampleIClamp[7], synapse_SampleIClamp[7], thresh, delay, weight)
}



test_gid = 0
while (test_gid < ncell) {
    if (pnm.gid_exists(test_gid)) {
        objectvar accessCell
        test_gid = ncell
    } else {
        test_gid = test_gid + 1
    } 
}

tstop = 80.0
dt = 0.02
steps_per_ms = 50.0
{pnm.set_maxstep(5)}


objref v_time
objref f_time
objref propsFile

if (hostid == 0) {
    v_time = new Vector()
    { v_time.record(&t) }
    { v_time.resize(4001) }
    f_time = new File()
}

objref v_SampleCellGroup_seg_Soma_v[8]
for i=0, 7 {
    if (isCellOnNode("SampleCellGroup", i)) {
        { v_SampleCellGroup_seg_Soma_v[i] = new Vector() }
        { v_SampleCellGroup_seg_Soma_v[i].record(&a_SampleCellGroup[i].Soma.v(0.5))} 
        { v_SampleCellGroup_seg_Soma_v[i].resize(4001) }
    }
}
objref f_SampleCellGroup_seg_Soma_v[8]

objref v_CellGroup_2_seg_Soma_m_Gran_NaF_98[4]
for i=0, 3 {
    if (isCellOnNode("CellGroup_2", i)) {
        { v_CellGroup_2_seg_Soma_m_Gran_NaF_98[i] = new Vector() }
        { v_CellGroup_2_seg_Soma_m_Gran_NaF_98[i].record(&a_CellGroup_2[i].Soma.m_Gran_NaF_98(0.5))} 
        { v_CellGroup_2_seg_Soma_m_Gran_NaF_98[i].resize(4001) }
    }
}
objref f_CellGroup_2_seg_Soma_m_Gran_NaF_98[4]

objref v_CellGroup_2_seg_Soma_v[4]
for i=0, 3 {
    if (isCellOnNode("CellGroup_2", i)) {
        { v_CellGroup_2_seg_Soma_v[i] = new Vector() }
        { v_CellGroup_2_seg_Soma_v[i].record(&a_CellGroup_2[i].Soma.v(0.5))} 
        { v_CellGroup_2_seg_Soma_v[i].resize(4001) }
    }
}
objref f_CellGroup_2_seg_Soma_v[4]

objref v_CellGroup_2_seg_Soma_cai[4]
for i=0, 3 {
    if (isCellOnNode("CellGroup_2", i)) {
        { v_CellGroup_2_seg_Soma_cai[i] = new Vector() }
        { v_CellGroup_2_seg_Soma_cai[i].record(&a_CellGroup_2[i].Soma.cai(0.5))} 
        { v_CellGroup_2_seg_Soma_cai[i].resize(4001) }
    }
}
objref f_CellGroup_2_seg_Soma_cai[4]

strdef simReference
simReference = "TestH5Parallel"



strdef simsDir
simsDir = "/home/padraig/neuroConstruct/testProjects/TestHDF5/simulations/"

strdef targetDir
{ sprint(targetDir, "%s%s/", simsDir, simReference)}

strdef date
// Note: not showing date/time of start/stop of simulation. This requires Cygwin to be installed// which includes the "date" unix command. Install under c:\cygwin

setuptime = stopsw()

print "Setup time for simulation on host ",hostid,": ",setuptime," seconds"

{pnm.want_all_spikes()}
{stdinit()}
print "Initialised on ", host, ", hostid: ", hostid
{currenttime = startsw()}
print "Starting simulation of duration ",tstop,"ms, dt: ",dt,"ms, reference: ",simReference,""

{pnm.psolve(80.0)}
{realruntime = startsw() - currenttime}
print "Finished simulation in ", realruntime ,"seconds on host ", hostid

print "Storing the data..."

strdef timeFilename
nrnpython("import numpy")
nrnpython("import tables")

nrnpython("from neuron import *")


nrnpython("h5file = tables.openFile(h.targetDir+'SampleCellGroup.VOLTAGE.host'+str(int(h.hostid))+'.h5', mode = 'w', title = 'Arrays of recordings of VOLTAGE from NEURON')")

print "Using HDF5 save mode: 4"
{nrnpython("allData = numpy.ones( (4001, h.n_SampleCellGroup_local ) , dtype=float )")}
{nrnpython("allData = allData * -1")}
{nrnpython("print allData.shape")}

{nrnpython("columnsVsCellNums = {}")}

{nrnpython("columnIndex = 0")}

for cellNum=0, n_SampleCellGroup-1 {
  if (isCellOnNode("SampleCellGroup", cellNum)) {
    { print "Adding data for cell number ",cellNum," in SampleCellGroup on host ", hostid}
    { nrnpython("allData[:,columnIndex] = h.v_SampleCellGroup_seg_Soma_v[int(h.cellNum)].to_python()")}
    {nrnpython("columnsVsCellNums[columnIndex] = int(h.cellNum)")}

    {nrnpython("columnIndex += 1")}

  }
}

{nrnpython("print columnsVsCellNums")}

{nrnpython("group = h5file.createGroup('/', 'SampleCellGroup', 'SampleCellGroup')")}
{nrnpython("group._v_attrs.Population = 'SampleCellGroup'")}
{nrnpython("hArray = h5file.createArray(group, 'VOLTAGE', allData, 'Values of VOLTAGE from cell group: SampleCellGroup')")}
{nrnpython("hArray.setAttr('Variable', 'VOLTAGE')")}
{nrnpython("for columnIndex in columnsVsCellNums.keys(): hArray.setAttr('column_'+str(columnIndex), 'cellNum_'+ str(columnsVsCellNums[columnIndex]))")}
{nrnpython("print 'Closing file: '+h5file.filename")}
{nrnpython("h5file.close()")}
nrnpython("h5file = tables.openFile(h.targetDir+'CellGroup_2.Gran_NaF_98_m.host'+str(int(h.hostid))+'.h5', mode = 'w', title = 'Arrays of recordings of Gran_NaF_98:m from NEURON')")

print "Using HDF5 save mode: 4"
{nrnpython("allData = numpy.ones( (4001, h.n_CellGroup_2_local ) , dtype=float )")}
{nrnpython("allData = allData * -1")}
{nrnpython("print allData.shape")}

{nrnpython("columnsVsCellNums = {}")}

{nrnpython("columnIndex = 0")}

for cellNum=0, n_CellGroup_2-1 {
  if (isCellOnNode("CellGroup_2", cellNum)) {
    { print "Adding data for cell number ",cellNum," in CellGroup_2 on host ", hostid}
    { nrnpython("allData[:,columnIndex] = h.v_CellGroup_2_seg_Soma_m_Gran_NaF_98[int(h.cellNum)].to_python()")}
    {nrnpython("columnsVsCellNums[columnIndex] = int(h.cellNum)")}

    {nrnpython("columnIndex += 1")}

  }
}

{nrnpython("print columnsVsCellNums")}

{nrnpython("group = h5file.createGroup('/', 'CellGroup_2', 'CellGroup_2')")}
{nrnpython("group._v_attrs.Population = 'CellGroup_2'")}
{nrnpython("hArray = h5file.createArray(group, 'Gran_NaF_98_m', allData, 'Values of Gran_NaF_98:m from cell group: CellGroup_2')")}
{nrnpython("hArray.setAttr('Variable', 'Gran_NaF_98:m')")}
{nrnpython("for columnIndex in columnsVsCellNums.keys(): hArray.setAttr('column_'+str(columnIndex), 'cellNum_'+ str(columnsVsCellNums[columnIndex]))")}
{nrnpython("print 'Closing file: '+h5file.filename")}
{nrnpython("h5file.close()")}
nrnpython("h5file = tables.openFile(h.targetDir+'CellGroup_2.VOLTAGE.host'+str(int(h.hostid))+'.h5', mode = 'w', title = 'Arrays of recordings of VOLTAGE from NEURON')")

print "Using HDF5 save mode: 4"
{nrnpython("allData = numpy.ones( (4001, h.n_CellGroup_2_local ) , dtype=float )")}
{nrnpython("allData = allData * -1")}
{nrnpython("print allData.shape")}

{nrnpython("columnsVsCellNums = {}")}

{nrnpython("columnIndex = 0")}

for cellNum=0, n_CellGroup_2-1 {
  if (isCellOnNode("CellGroup_2", cellNum)) {
    { print "Adding data for cell number ",cellNum," in CellGroup_2 on host ", hostid}
    { nrnpython("allData[:,columnIndex] = h.v_CellGroup_2_seg_Soma_v[int(h.cellNum)].to_python()")}
    {nrnpython("columnsVsCellNums[columnIndex] = int(h.cellNum)")}

    {nrnpython("columnIndex += 1")}

  }
}

{nrnpython("print columnsVsCellNums")}

{nrnpython("group = h5file.createGroup('/', 'CellGroup_2', 'CellGroup_2')")}
{nrnpython("group._v_attrs.Population = 'CellGroup_2'")}
{nrnpython("hArray = h5file.createArray(group, 'VOLTAGE', allData, 'Values of VOLTAGE from cell group: CellGroup_2')")}
{nrnpython("hArray.setAttr('Variable', 'VOLTAGE')")}
{nrnpython("for columnIndex in columnsVsCellNums.keys(): hArray.setAttr('column_'+str(columnIndex), 'cellNum_'+ str(columnsVsCellNums[columnIndex]))")}
{nrnpython("print 'Closing file: '+h5file.filename")}
{nrnpython("h5file.close()")}
nrnpython("h5file = tables.openFile(h.targetDir+'CellGroup_2.Gran_CaPool_98_CONC_ca.host'+str(int(h.hostid))+'.h5', mode = 'w', title = 'Arrays of recordings of Gran_CaPool_98:CONC:ca from NEURON')")

print "Using HDF5 save mode: 4"
{nrnpython("allData = numpy.ones( (4001, h.n_CellGroup_2_local ) , dtype=float )")}
{nrnpython("allData = allData * -1")}
{nrnpython("print allData.shape")}

{nrnpython("columnsVsCellNums = {}")}

{nrnpython("columnIndex = 0")}

for cellNum=0, n_CellGroup_2-1 {
  if (isCellOnNode("CellGroup_2", cellNum)) {
    { print "Adding data for cell number ",cellNum," in CellGroup_2 on host ", hostid}
    { nrnpython("allData[:,columnIndex] = h.v_CellGroup_2_seg_Soma_cai[int(h.cellNum)].to_python()")}
    {nrnpython("columnsVsCellNums[columnIndex] = int(h.cellNum)")}

    {nrnpython("columnIndex += 1")}

  }
}

{nrnpython("print columnsVsCellNums")}

{nrnpython("group = h5file.createGroup('/', 'CellGroup_2', 'CellGroup_2')")}
{nrnpython("group._v_attrs.Population = 'CellGroup_2'")}
{nrnpython("hArray = h5file.createArray(group, 'Gran_CaPool_98_CONC_ca', allData, 'Values of Gran_CaPool_98:CONC:ca from cell group: CellGroup_2')")}
{nrnpython("hArray.setAttr('Variable', 'Gran_CaPool_98:CONC:ca')")}
{nrnpython("for columnIndex in columnsVsCellNums.keys(): hArray.setAttr('column_'+str(columnIndex), 'cellNum_'+ str(columnsVsCellNums[columnIndex]))")}
{nrnpython("print 'Closing file: '+h5file.filename")}
{nrnpython("h5file.close()")}

if (hostid == 0) {
    { sprint(timeFilename, "%s%s", targetDir, "time.dat")}
    { f_time.wopen(timeFilename) }
    { v_time.printf(f_time) }
    { f_time.close() }
}

{savetime = stopsw()}

if (hostid == 0) {
    propsFile = new File()
    strdef propsFilename
    {sprint(propsFilename, "%ssimulator.props", targetDir)}
    {propsFile.wopen(propsFilename)}
    {propsFile.printf("#This is a list of properties generated by NEURON during the simulation run\n")}
    {propsFile.printf("Host=%s\n", host)}
    {propsFile.printf("RealSimulationTime=%g\n", realruntime)}
    {propsFile.printf("SimulationSaveTime=%g\n", savetime)}
    {propsFile.printf("SimulationSetupTime=%g\n", setuptime)}
    {propsFile.printf("NEURONversion=%s\n", nrnversion())}
    {propsFile.printf("NumberHosts=%g\n", pnm.pc.nhost)}
    {propsFile.close()}
}

    print "Data stored in ",savetime, "secs in directory: ", targetDir




{pnm.pc.done}
