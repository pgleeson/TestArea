//  ******************************************************
// 
//     File generated by: neuroConstruct v1.4.1
// 
//  ******************************************************

{load_file("nrngui.hoc")}

//  Initialising stopwatch for timing setup

{startsw()}

print ""
print "*****************************************************"
print ""
print "    neuroConstruct generated NEURON simulation "
print "    for project: /home/padraig/neuroConstruct/testProjects/TestHDF5/TestHDF5.ncx "
print ""
print "    Description: This is a simple project with a single cell placed randomly in a 3D rectangular box."
print "    "
print "    Go to tab Generate, press Generate Cell Positions and Connections, and then to visualise the results, go to tab Visualisation and press View, with Latest Generated Positions selected in the drop down box."
print "    "
print "    If NEURON or GENESIS are installed, the cell can be simulated via tab Export."
print ""
print "    Simulation Configuration: SimConfig: Default Simulation Configuration "
print "    This is the default configuration of the Cell Groups, stimulations, plots, etc for this project "
print " "
print  "*****************************************************"

strdef pwd
{system("pwd", pwd)}
print ""
print "Current working dir: ", pwd

objectvar allCells
{allCells = new List()}


//  A flag to signal simulation was generated by neuroConstruct 

{nC = 1}


//  Including neuroConstruct utilities file 

{load_file("nCtools.hoc")}

//  Including neuroConstruct cell check file 

{load_file("cellCheck.hoc")}

//  Getting hostname

objref strFuncs
{strFuncs = new StringFunctions()}
strdef host
{system("hostname", host)}
{strFuncs.left(host, strFuncs.len(host)-1)}


//  Simulation running in serial mode, setting default host id

{hostid = 0}


//  Initializes random-number generator

{use_mcell_ran4(1)}

{mcell_ran4_init(593223650)}

//////////////////////////////////////////////////////////////////////
//   Cell group 0: SampleCellGroup has cells of type: SampleCell
//////////////////////////////////////////////////////////////////////


//  Adding cell template file: SampleCell.hoc for cell group SampleCellGroup

{ load_file("SampleCell.hoc") }

//  Adding 8 cells of type SampleCell in region SampleRegion

{n_SampleCellGroup = 8}

objectvar a_SampleCellGroup[n_SampleCellGroup]

proc addCell_SampleCellGroup() {
    strdef reference
    sprint(reference, "SampleCellGroup_%d", $1)
    a_SampleCellGroup[$1] = new SampleCell(reference, "SampleCell", "A Simple cell for testing purposes")
    allCells.append(a_SampleCellGroup[$1])
}

for i = 0, n_SampleCellGroup-1 {
    addCell_SampleCellGroup(i)

}


//  Placing these cells in a region described by: Rectangular Box from point: (0.0, 0.0, 0.0) to (500.0, 100.0, 500.0)


//  Packing has been generated by: Random: num: 8, edge: 1, overlap: 1, other overlap: 1

{a_SampleCellGroup[0].position(321.85928,34.63083,154.51035)}
{a_SampleCellGroup[1].position(405.83344,25.555002,266.80334)}
{a_SampleCellGroup[2].position(36.117344,65.42647,262.8665)}
{a_SampleCellGroup[3].position(182.75282,89.98356,24.361818)}
{a_SampleCellGroup[4].position(86.374756,67.649284,281.3169)}
{a_SampleCellGroup[5].position(79.49233,43.302887,248.47409)}
{a_SampleCellGroup[6].position(468.9716,53.427635,486.00162)}
{a_SampleCellGroup[7].position(394.72943,32.334553,248.45502)}

//////////////////////////////////////////////////////////////////////
//   Cell group 1: CellGroup_2 has cells of type: Granule_98
//////////////////////////////////////////////////////////////////////


//  Adding cell template file: Granule_98.hoc for cell group CellGroup_2

{ load_file("Granule_98.hoc") }

//  Adding 4 cells of type Granule_98 in region Regions_2

{n_CellGroup_2 = 4}

objectvar a_CellGroup_2[n_CellGroup_2]

proc addCell_CellGroup_2() {
    strdef reference
    sprint(reference, "CellGroup_2_%d", $1)
    a_CellGroup_2[$1] = new Granule_98(reference, "Granule_98", "An implementation using ChannelML of the Granule cell mode from Maex, R and De Schutter, E. Synchronization of Golgi and Granule Cell Firing in a Detailed Network Model of the Cerebellar Granule Cell Layer, 1998")
    allCells.append(a_CellGroup_2[$1])
}

for i = 0, n_CellGroup_2-1 {
    addCell_CellGroup_2(i)

}


//  Placing these cells in a region described by: Rectangular Box from point: (0.0, 100.0, 0.0) to (500.0, 200.0, 500.0)


//  Packing has been generated by: Random: num: 4, edge: 1, overlap: 1, other overlap: 1

{a_CellGroup_2[0].position(387.7106,120.180725,115.2561)}
{a_CellGroup_2[1].position(90.289566,123.60414,191.50078)}
{a_CellGroup_2[2].position(230.2208,179.71979,279.27356)}
{a_CellGroup_2[3].position(412.33167,133.16972,99.39816)}


//////////////////////////////////////////////////////////////////////
//   Setting initial parameters
//////////////////////////////////////////////////////////////////////

strdef simConfig
{simConfig = "Default Simulation Configuration"}
{celsius = 32.0}



//      Note: the following values are from IonProperties in Cell



proc initialiseValues0() {


//  Setting initial vals in cell group: SampleCellGroup which has 8 cells


//  Giving all cells an initial potential of: -65.0

    for i = 0, n_SampleCellGroup-1 {
        forsec a_SampleCellGroup[i].all  v = -65.0

    }


//  Setting initial vals in cell group: CellGroup_2 which has 4 cells


//  Giving all cells an initial potential of: -65.0

    for i = 0, n_CellGroup_2-1 {
        forsec a_CellGroup_2[i].all  v = -65.0

    }

}

objref fih0
{fih0 = new FInitializeHandler(0, "initialiseValues0()")}


proc initialiseValues1() {

    for i = 0, n_CellGroup_2-1 {
        forsec a_CellGroup_2[i].all { eh = -42.0}
        forsec a_CellGroup_2[i].all { ek = -90.0}
        forsec a_CellGroup_2[i].all {
            cai = 7.55E-5
            cao = 2.4
        }
        forsec a_CellGroup_2[i].all { ena = 55.0}
    }

}

objref fih1
{fih1 = new FInitializeHandler(1, "initialiseValues1()")}



//////////////////////////////////////////////////////////////////////
//   Adding Network Connections
//////////////////////////////////////////////////////////////////////


// Adding NetConn: NetConn_SampleCellGroup_CellGroup_2 from: SampleCellGroup to: CellGroup_2 with 32 connections
// each with syn(s): [MF_AMPA [thresh: -20.0, delay: 5.0, weight: 0.0 -> 1.0], NMDA [thresh: -20.0, delay: 5.0, weight: 1.0]]

//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 0 to Soma on tgt cell 3
//  Fraction along src section: 0.7545135, weight: 0.02220267
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

objectvar syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[32]

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[0] = new MF_AMPA(0.5)}
{a_SampleCellGroup[0].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.7545135), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[0], -20.0, 5.0, 0.02220267))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 0 to Soma on tgt cell 3
//  Fraction along src section: 0.7545135, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

objectvar syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[32]

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[0] = new NMDA(0.5)}
{a_SampleCellGroup[0].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.7545135), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[0], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 0 to Soma on tgt cell 2
//  Fraction along src section: 0.48424882, weight: 0.30368304
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[1] = new MF_AMPA(0.5)}
{a_SampleCellGroup[0].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.48424882), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[1], -20.0, 5.0, 0.30368304))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 0 to Soma on tgt cell 2
//  Fraction along src section: 0.48424882, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[1] = new NMDA(0.5)}
{a_SampleCellGroup[0].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.48424882), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[1], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 0 to Soma on tgt cell 0
//  Fraction along src section: 0.6836699, weight: 0.15202975
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[2] = new MF_AMPA(0.5)}
{a_SampleCellGroup[0].mainAxonSec a_CellGroup_2[0].synlist.append(new NetCon(&v(0.6836699), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[2], -20.0, 5.0, 0.15202975))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 0 to Soma on tgt cell 0
//  Fraction along src section: 0.6836699, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[2] = new NMDA(0.5)}
{a_SampleCellGroup[0].mainAxonSec a_CellGroup_2[0].synlist.append(new NetCon(&v(0.6836699), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[2], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 0 to Soma on tgt cell 2
//  Fraction along src section: 0.6680372, weight: 0.92351997
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[3] = new MF_AMPA(0.5)}
{a_SampleCellGroup[0].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.6680372), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[3], -20.0, 5.0, 0.92351997))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 0 to Soma on tgt cell 2
//  Fraction along src section: 0.6680372, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[3] = new NMDA(0.5)}
{a_SampleCellGroup[0].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.6680372), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[3], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 1 to Soma on tgt cell 0
//  Fraction along src section: 0.37197024, weight: 0.9806194
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[4] = new MF_AMPA(0.5)}
{a_SampleCellGroup[1].mainAxonSec a_CellGroup_2[0].synlist.append(new NetCon(&v(0.37197024), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[4], -20.0, 5.0, 0.9806194))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 1 to Soma on tgt cell 0
//  Fraction along src section: 0.37197024, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[4] = new NMDA(0.5)}
{a_SampleCellGroup[1].mainAxonSec a_CellGroup_2[0].synlist.append(new NetCon(&v(0.37197024), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[4], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 1 to Soma on tgt cell 2
//  Fraction along src section: 0.72391284, weight: 0.99626476
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[5] = new MF_AMPA(0.5)}
{a_SampleCellGroup[1].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.72391284), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[5], -20.0, 5.0, 0.99626476))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 1 to Soma on tgt cell 2
//  Fraction along src section: 0.72391284, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[5] = new NMDA(0.5)}
{a_SampleCellGroup[1].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.72391284), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[5], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 1 to Soma on tgt cell 1
//  Fraction along src section: 0.28597212, weight: 0.42317295
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[6] = new MF_AMPA(0.5)}
{a_SampleCellGroup[1].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.28597212), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[6], -20.0, 5.0, 0.42317295))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 1 to Soma on tgt cell 1
//  Fraction along src section: 0.28597212, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[6] = new NMDA(0.5)}
{a_SampleCellGroup[1].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.28597212), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[6], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 1 to Soma on tgt cell 1
//  Fraction along src section: 0.155294, weight: 0.047141492
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[7] = new MF_AMPA(0.5)}
{a_SampleCellGroup[1].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.155294), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[7], -20.0, 5.0, 0.047141492))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 1 to Soma on tgt cell 1
//  Fraction along src section: 0.155294, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[7] = new NMDA(0.5)}
{a_SampleCellGroup[1].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.155294), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[7], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 2 to Soma on tgt cell 1
//  Fraction along src section: 0.42496082, weight: 0.92711526
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[8] = new MF_AMPA(0.5)}
{a_SampleCellGroup[2].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.42496082), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[8], -20.0, 5.0, 0.92711526))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 2 to Soma on tgt cell 1
//  Fraction along src section: 0.42496082, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[8] = new NMDA(0.5)}
{a_SampleCellGroup[2].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.42496082), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[8], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 2 to Soma on tgt cell 2
//  Fraction along src section: 0.96052986, weight: 0.763397
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[9] = new MF_AMPA(0.5)}
{a_SampleCellGroup[2].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.96052986), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[9], -20.0, 5.0, 0.763397))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 2 to Soma on tgt cell 2
//  Fraction along src section: 0.96052986, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[9] = new NMDA(0.5)}
{a_SampleCellGroup[2].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.96052986), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[9], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 2 to Soma on tgt cell 1
//  Fraction along src section: 0.848128, weight: 0.17741853
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[10] = new MF_AMPA(0.5)}
{a_SampleCellGroup[2].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.848128), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[10], -20.0, 5.0, 0.17741853))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 2 to Soma on tgt cell 1
//  Fraction along src section: 0.848128, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[10] = new NMDA(0.5)}
{a_SampleCellGroup[2].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.848128), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[10], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 2 to Soma on tgt cell 0
//  Fraction along src section: 0.11245363, weight: 0.20870954
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[11] = new MF_AMPA(0.5)}
{a_SampleCellGroup[2].mainAxonSec a_CellGroup_2[0].synlist.append(new NetCon(&v(0.11245363), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[11], -20.0, 5.0, 0.20870954))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 2 to Soma on tgt cell 0
//  Fraction along src section: 0.11245363, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[11] = new NMDA(0.5)}
{a_SampleCellGroup[2].mainAxonSec a_CellGroup_2[0].synlist.append(new NetCon(&v(0.11245363), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[11], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 3 to Soma on tgt cell 2
//  Fraction along src section: 0.4547121, weight: 0.79199773
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[12] = new MF_AMPA(0.5)}
{a_SampleCellGroup[3].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.4547121), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[12], -20.0, 5.0, 0.79199773))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 3 to Soma on tgt cell 2
//  Fraction along src section: 0.4547121, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[12] = new NMDA(0.5)}
{a_SampleCellGroup[3].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.4547121), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[12], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 3 to Soma on tgt cell 3
//  Fraction along src section: 0.10365605, weight: 0.15274632
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[13] = new MF_AMPA(0.5)}
{a_SampleCellGroup[3].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.10365605), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[13], -20.0, 5.0, 0.15274632))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 3 to Soma on tgt cell 3
//  Fraction along src section: 0.10365605, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[13] = new NMDA(0.5)}
{a_SampleCellGroup[3].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.10365605), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[13], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 3 to Soma on tgt cell 0
//  Fraction along src section: 0.9553624, weight: 0.114019394
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[14] = new MF_AMPA(0.5)}
{a_SampleCellGroup[3].mainAxonSec a_CellGroup_2[0].synlist.append(new NetCon(&v(0.9553624), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[14], -20.0, 5.0, 0.114019394))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 3 to Soma on tgt cell 0
//  Fraction along src section: 0.9553624, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[14] = new NMDA(0.5)}
{a_SampleCellGroup[3].mainAxonSec a_CellGroup_2[0].synlist.append(new NetCon(&v(0.9553624), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[14], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 3 to Soma on tgt cell 1
//  Fraction along src section: 0.06263703, weight: 0.73061967
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[15] = new MF_AMPA(0.5)}
{a_SampleCellGroup[3].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.06263703), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[15], -20.0, 5.0, 0.73061967))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 3 to Soma on tgt cell 1
//  Fraction along src section: 0.06263703, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[15] = new NMDA(0.5)}
{a_SampleCellGroup[3].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.06263703), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[15], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 4 to Soma on tgt cell 3
//  Fraction along src section: 0.052092135, weight: 0.5253484
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[16] = new MF_AMPA(0.5)}
{a_SampleCellGroup[4].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.052092135), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[16], -20.0, 5.0, 0.5253484))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 4 to Soma on tgt cell 3
//  Fraction along src section: 0.052092135, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[16] = new NMDA(0.5)}
{a_SampleCellGroup[4].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.052092135), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[16], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 4 to Soma on tgt cell 3
//  Fraction along src section: 0.04071933, weight: 0.79250365
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[17] = new MF_AMPA(0.5)}
{a_SampleCellGroup[4].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.04071933), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[17], -20.0, 5.0, 0.79250365))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 4 to Soma on tgt cell 3
//  Fraction along src section: 0.04071933, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[17] = new NMDA(0.5)}
{a_SampleCellGroup[4].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.04071933), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[17], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 4 to Soma on tgt cell 3
//  Fraction along src section: 0.20453596, weight: 0.9289908
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[18] = new MF_AMPA(0.5)}
{a_SampleCellGroup[4].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.20453596), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[18], -20.0, 5.0, 0.9289908))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 4 to Soma on tgt cell 3
//  Fraction along src section: 0.20453596, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[18] = new NMDA(0.5)}
{a_SampleCellGroup[4].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.20453596), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[18], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 4 to Soma on tgt cell 1
//  Fraction along src section: 0.94558495, weight: 0.85542816
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[19] = new MF_AMPA(0.5)}
{a_SampleCellGroup[4].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.94558495), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[19], -20.0, 5.0, 0.85542816))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 4 to Soma on tgt cell 1
//  Fraction along src section: 0.94558495, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[19] = new NMDA(0.5)}
{a_SampleCellGroup[4].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.94558495), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[19], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 5 to Soma on tgt cell 3
//  Fraction along src section: 0.001829803, weight: 0.17827296
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[20] = new MF_AMPA(0.5)}
{a_SampleCellGroup[5].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.001829803), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[20], -20.0, 5.0, 0.17827296))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 5 to Soma on tgt cell 3
//  Fraction along src section: 0.001829803, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[20] = new NMDA(0.5)}
{a_SampleCellGroup[5].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.001829803), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[20], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 5 to Soma on tgt cell 3
//  Fraction along src section: 0.254521, weight: 0.52727604
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[21] = new MF_AMPA(0.5)}
{a_SampleCellGroup[5].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.254521), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[21], -20.0, 5.0, 0.52727604))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 5 to Soma on tgt cell 3
//  Fraction along src section: 0.254521, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[21] = new NMDA(0.5)}
{a_SampleCellGroup[5].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.254521), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[21], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 5 to Soma on tgt cell 2
//  Fraction along src section: 0.082282186, weight: 0.26663023
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[22] = new MF_AMPA(0.5)}
{a_SampleCellGroup[5].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.082282186), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[22], -20.0, 5.0, 0.26663023))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 5 to Soma on tgt cell 2
//  Fraction along src section: 0.082282186, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[22] = new NMDA(0.5)}
{a_SampleCellGroup[5].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.082282186), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[22], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 5 to Soma on tgt cell 1
//  Fraction along src section: 0.07893974, weight: 0.6372674
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[23] = new MF_AMPA(0.5)}
{a_SampleCellGroup[5].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.07893974), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[23], -20.0, 5.0, 0.6372674))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 5 to Soma on tgt cell 1
//  Fraction along src section: 0.07893974, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[23] = new NMDA(0.5)}
{a_SampleCellGroup[5].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.07893974), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[23], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 6 to Soma on tgt cell 1
//  Fraction along src section: 0.74710774, weight: 0.034261465
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[24] = new MF_AMPA(0.5)}
{a_SampleCellGroup[6].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.74710774), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[24], -20.0, 5.0, 0.034261465))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 6 to Soma on tgt cell 1
//  Fraction along src section: 0.74710774, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[24] = new NMDA(0.5)}
{a_SampleCellGroup[6].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.74710774), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[24], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 6 to Soma on tgt cell 2
//  Fraction along src section: 0.37146175, weight: 0.07772136
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[25] = new MF_AMPA(0.5)}
{a_SampleCellGroup[6].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.37146175), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[25], -20.0, 5.0, 0.07772136))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 6 to Soma on tgt cell 2
//  Fraction along src section: 0.37146175, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[25] = new NMDA(0.5)}
{a_SampleCellGroup[6].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.37146175), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[25], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 6 to Soma on tgt cell 2
//  Fraction along src section: 0.8998455, weight: 0.99653804
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[26] = new MF_AMPA(0.5)}
{a_SampleCellGroup[6].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.8998455), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[26], -20.0, 5.0, 0.99653804))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 6 to Soma on tgt cell 2
//  Fraction along src section: 0.8998455, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[26] = new NMDA(0.5)}
{a_SampleCellGroup[6].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.8998455), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[26], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 6 to Soma on tgt cell 1
//  Fraction along src section: 0.067830324, weight: 0.538645
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[27] = new MF_AMPA(0.5)}
{a_SampleCellGroup[6].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.067830324), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[27], -20.0, 5.0, 0.538645))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 6 to Soma on tgt cell 1
//  Fraction along src section: 0.067830324, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[27] = new NMDA(0.5)}
{a_SampleCellGroup[6].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.067830324), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[27], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 7 to Soma on tgt cell 3
//  Fraction along src section: 0.7096851, weight: 0.6539394
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[28] = new MF_AMPA(0.5)}
{a_SampleCellGroup[7].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.7096851), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[28], -20.0, 5.0, 0.6539394))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 7 to Soma on tgt cell 3
//  Fraction along src section: 0.7096851, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[3].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[28] = new NMDA(0.5)}
{a_SampleCellGroup[7].mainAxonSec a_CellGroup_2[3].synlist.append(new NetCon(&v(0.7096851), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[28], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 7 to Soma on tgt cell 0
//  Fraction along src section: 0.7381495, weight: 0.89970666
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[29] = new MF_AMPA(0.5)}
{a_SampleCellGroup[7].mainAxonSec a_CellGroup_2[0].synlist.append(new NetCon(&v(0.7381495), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[29], -20.0, 5.0, 0.89970666))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 7 to Soma on tgt cell 0
//  Fraction along src section: 0.7381495, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[0].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[29] = new NMDA(0.5)}
{a_SampleCellGroup[7].mainAxonSec a_CellGroup_2[0].synlist.append(new NetCon(&v(0.7381495), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[29], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 7 to Soma on tgt cell 2
//  Fraction along src section: 0.4447775, weight: 0.30441946
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[30] = new MF_AMPA(0.5)}
{a_SampleCellGroup[7].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.4447775), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[30], -20.0, 5.0, 0.30441946))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 7 to Soma on tgt cell 2
//  Fraction along src section: 0.4447775, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[2].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[30] = new NMDA(0.5)}
{a_SampleCellGroup[7].mainAxonSec a_CellGroup_2[2].synlist.append(new NetCon(&v(0.4447775), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[30], -20.0, 5.0, 1.0))}


//  Syn conn (type: MF_AMPA) from mainAxonSec on src cell 7 to Soma on tgt cell 1
//  Fraction along src section: 0.8854166, weight: 0.033407032
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[31] = new MF_AMPA(0.5)}
{a_SampleCellGroup[7].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.8854166), syn_NetConn_SampleCellGroup_CellGroup_2_MF_AMPA[31], -20.0, 5.0, 0.033407032))}


//  Syn conn (type: NMDA) from mainAxonSec on src cell 7 to Soma on tgt cell 1
//  Fraction along src section: 0.8854166, weight: 1.0
//  Delay due to AP prop along segs: 0.0, delay due to AP jump pre -> post 3D location 0.0
//  Internal synapse delay (from Synaptic Props): 5.0, TOTAL delay: 5.0

{a_CellGroup_2[1].Soma syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[31] = new NMDA(0.5)}
{a_SampleCellGroup[7].mainAxonSec a_CellGroup_2[1].synlist.append(new NetCon(&v(0.8854166), syn_NetConn_SampleCellGroup_CellGroup_2_NMDA[31], -20.0, 5.0, 1.0))}


//////////////////////////////////////////////////////////////////////
//   Adding 1 stimulation(s)
//////////////////////////////////////////////////////////////////////

n_SampleIClamp = 8 // number of individual inputs in SampleIClamp

objref spikesource_SampleIClamp[n_SampleIClamp]

objref synapse_SampleIClamp[n_SampleIClamp]
objref connection_SampleIClamp[n_SampleIClamp]
thresh = -20
delay = 0
weight = 1

access a_SampleCellGroup[0].Soma 
spikesource_SampleIClamp[0] = new NetStim(0.5)

//  NOTE: This is a very rough way to get an average rate of 0.05 kHz!!!
spikesource_SampleIClamp[0].number = 4000.0
spikesource_SampleIClamp[0].interval = 20.0
spikesource_SampleIClamp[0].noise = 1.0 
spikesource_SampleIClamp[0].start = 0 
synapse_SampleIClamp[0] = new DoubExpSyn(0.5) 

//   Inserts synapse 0.5 of way down

connection_SampleIClamp[0] = new NetCon(spikesource_SampleIClamp[0], synapse_SampleIClamp[0], thresh, delay, weight)


access a_SampleCellGroup[1].Soma 
spikesource_SampleIClamp[1] = new NetStim(0.5)

//  NOTE: This is a very rough way to get an average rate of 0.05 kHz!!!
spikesource_SampleIClamp[1].number = 4000.0
spikesource_SampleIClamp[1].interval = 20.0
spikesource_SampleIClamp[1].noise = 1.0 
spikesource_SampleIClamp[1].start = 0 
synapse_SampleIClamp[1] = new DoubExpSyn(0.5) 

//   Inserts synapse 0.5 of way down

connection_SampleIClamp[1] = new NetCon(spikesource_SampleIClamp[1], synapse_SampleIClamp[1], thresh, delay, weight)


access a_SampleCellGroup[2].Soma 
spikesource_SampleIClamp[2] = new NetStim(0.5)

//  NOTE: This is a very rough way to get an average rate of 0.05 kHz!!!
spikesource_SampleIClamp[2].number = 4000.0
spikesource_SampleIClamp[2].interval = 20.0
spikesource_SampleIClamp[2].noise = 1.0 
spikesource_SampleIClamp[2].start = 0 
synapse_SampleIClamp[2] = new DoubExpSyn(0.5) 

//   Inserts synapse 0.5 of way down

connection_SampleIClamp[2] = new NetCon(spikesource_SampleIClamp[2], synapse_SampleIClamp[2], thresh, delay, weight)


access a_SampleCellGroup[3].Soma 
spikesource_SampleIClamp[3] = new NetStim(0.5)

//  NOTE: This is a very rough way to get an average rate of 0.05 kHz!!!
spikesource_SampleIClamp[3].number = 4000.0
spikesource_SampleIClamp[3].interval = 20.0
spikesource_SampleIClamp[3].noise = 1.0 
spikesource_SampleIClamp[3].start = 0 
synapse_SampleIClamp[3] = new DoubExpSyn(0.5) 

//   Inserts synapse 0.5 of way down

connection_SampleIClamp[3] = new NetCon(spikesource_SampleIClamp[3], synapse_SampleIClamp[3], thresh, delay, weight)


access a_SampleCellGroup[4].Soma 
spikesource_SampleIClamp[4] = new NetStim(0.5)

//  NOTE: This is a very rough way to get an average rate of 0.05 kHz!!!
spikesource_SampleIClamp[4].number = 4000.0
spikesource_SampleIClamp[4].interval = 20.0
spikesource_SampleIClamp[4].noise = 1.0 
spikesource_SampleIClamp[4].start = 0 
synapse_SampleIClamp[4] = new DoubExpSyn(0.5) 

//   Inserts synapse 0.5 of way down

connection_SampleIClamp[4] = new NetCon(spikesource_SampleIClamp[4], synapse_SampleIClamp[4], thresh, delay, weight)


access a_SampleCellGroup[5].Soma 
spikesource_SampleIClamp[5] = new NetStim(0.5)

//  NOTE: This is a very rough way to get an average rate of 0.05 kHz!!!
spikesource_SampleIClamp[5].number = 4000.0
spikesource_SampleIClamp[5].interval = 20.0
spikesource_SampleIClamp[5].noise = 1.0 
spikesource_SampleIClamp[5].start = 0 
synapse_SampleIClamp[5] = new DoubExpSyn(0.5) 

//   Inserts synapse 0.5 of way down

connection_SampleIClamp[5] = new NetCon(spikesource_SampleIClamp[5], synapse_SampleIClamp[5], thresh, delay, weight)


access a_SampleCellGroup[6].Soma 
spikesource_SampleIClamp[6] = new NetStim(0.5)

//  NOTE: This is a very rough way to get an average rate of 0.05 kHz!!!
spikesource_SampleIClamp[6].number = 4000.0
spikesource_SampleIClamp[6].interval = 20.0
spikesource_SampleIClamp[6].noise = 1.0 
spikesource_SampleIClamp[6].start = 0 
synapse_SampleIClamp[6] = new DoubExpSyn(0.5) 

//   Inserts synapse 0.5 of way down

connection_SampleIClamp[6] = new NetCon(spikesource_SampleIClamp[6], synapse_SampleIClamp[6], thresh, delay, weight)


access a_SampleCellGroup[7].Soma 
spikesource_SampleIClamp[7] = new NetStim(0.5)

//  NOTE: This is a very rough way to get an average rate of 0.05 kHz!!!
spikesource_SampleIClamp[7].number = 4000.0
spikesource_SampleIClamp[7].interval = 20.0
spikesource_SampleIClamp[7].noise = 1.0 
spikesource_SampleIClamp[7].start = 0 
synapse_SampleIClamp[7] = new DoubExpSyn(0.5) 

//   Inserts synapse 0.5 of way down

connection_SampleIClamp[7] = new NetCon(spikesource_SampleIClamp[7], synapse_SampleIClamp[7], thresh, delay, weight)



access SampleCell[0].Soma

//////////////////////////////////////////////////////////////////////
//   Settings for running the demo
//////////////////////////////////////////////////////////////////////


tstop = 800.0
dt = 0.02
steps_per_ms = 50.0

//////////////////////////////////////////////////////////////////////
//   This will run a full simulation of 40001 steps when the hoc file is executed
//////////////////////////////////////////////////////////////////////


//  Recording 4 variable(s)

objref v_time
objref f_time
objref propsFile

v_time = new Vector()
{ v_time.record(&t) }
{ v_time.resize(40001) }
f_time = new File()


//  Saving VOLTAGE on only one seg, id: 0, in all 8 cells in SampleCellGroup


//  Creating vector for segment: Soma(ID: 0)

objref v_SampleCellGroup_seg_Soma_v[8]
for i=0, 7 {
    { v_SampleCellGroup_seg_Soma_v[i] = new Vector() }
    { v_SampleCellGroup_seg_Soma_v[i].record(&a_SampleCellGroup[i].Soma.v(0.5))} 
    { v_SampleCellGroup_seg_Soma_v[i].resize(40001) }
}
objref f_SampleCellGroup_seg_Soma_v[8]


//  Saving Gran_NaF_98:m on only one seg, id: 0, in all 4 cells in CellGroup_2


//  Creating vector for segment: Soma(ID: 0)

objref v_CellGroup_2_seg_Soma_m_Gran_NaF_98[4]
for i=0, 3 {
    { v_CellGroup_2_seg_Soma_m_Gran_NaF_98[i] = new Vector() }
    { v_CellGroup_2_seg_Soma_m_Gran_NaF_98[i].record(&a_CellGroup_2[i].Soma.m_Gran_NaF_98(0.5))} 
    { v_CellGroup_2_seg_Soma_m_Gran_NaF_98[i].resize(40001) }
}
objref f_CellGroup_2_seg_Soma_m_Gran_NaF_98[4]


//  Saving VOLTAGE on only one seg, id: 0, in all 4 cells in CellGroup_2


//  Creating vector for segment: Soma(ID: 0)

objref v_CellGroup_2_seg_Soma_v[4]
for i=0, 3 {
    { v_CellGroup_2_seg_Soma_v[i] = new Vector() }
    { v_CellGroup_2_seg_Soma_v[i].record(&a_CellGroup_2[i].Soma.v(0.5))} 
    { v_CellGroup_2_seg_Soma_v[i].resize(40001) }
}
objref f_CellGroup_2_seg_Soma_v[4]


//  Saving Gran_CaPool_98:CONC:ca on only one seg, id: 0, in all 4 cells in CellGroup_2


//  Creating vector for segment: Soma(ID: 0)

objref v_CellGroup_2_seg_Soma_cai[4]
for i=0, 3 {
    { v_CellGroup_2_seg_Soma_cai[i] = new Vector() }
    { v_CellGroup_2_seg_Soma_cai[i].record(&a_CellGroup_2[i].Soma.cai(0.5))} 
    { v_CellGroup_2_seg_Soma_cai[i].resize(40001) }
}
objref f_CellGroup_2_seg_Soma_cai[4]



strdef simsDir
simsDir = "/home/padraig/neuroConstruct/testProjects/TestHDF5/simulations/"

strdef simReference
simReference = "TestH5"


//  Note: to change location of the generated simulation files, just change value of targetDir
//  e.g. targetDir="" or targetDir="aSubDir/"

strdef targetDir
{ sprint(targetDir, "%s%s/", simsDir, simReference)}


//  Single simulation run...

strdef date
// Note: if there is a problem with this line under Windows, it may mean that you will have to install Cygwin// which includes the "date" unix command. Install under c:\cygwin

{system("date +%x,%X:%N", date)}
setuptime = stopsw()

print "Setup time for simulation: ",setuptime," seconds"

print "Starting simulation of duration 800.0 ms, dt: 0.02, reference: TestH5 at time: ", date, ""

{currenttime = startsw()}
//////////////////////////////////////////////////////////////////////
//   Main run statement
//////////////////////////////////////////////////////////////////////

{run()}

{system("date +%x,%X:%N", date)}
{realruntime = startsw() - currenttime}
print "Finished simulation in ", realruntime ,"seconds"

print "Current time: ", date

print "Storing the data..."

strdef timeFilename
nrnpython("import numpy")
nrnpython("import tables")

nrnpython("from neuron import *")



//  Saving VOLTAGE on only one seg, id: 0, in all 8 cells in SampleCellGroup


//  Saving vector for segment: Soma(ID: 0)

nrnpython("h5file = tables.openFile('SampleCellGroup.VOLTAGE.h5', mode = 'w', title = 'Arrays of recordings of VOLTAGE from NEURON')")

print "Using HDF5 save mode: 4"
{nrnpython("allData = numpy.zeros( (h.v_time.size(), 8) , dtype=float )")}
{nrnpython("print allData.shape")}

for i=0, n_SampleCellGroup-1 {
    { nrnpython("allData[:,int(h.i)] = h.v_SampleCellGroup_seg_Soma_v[int(h.i)].to_python()")}
}
{nrnpython("group = h5file.createGroup('/', 'SampleCellGroup', 'SampleCellGroup')")}
nrnpython("group._v_attrs.Population = 'SampleCellGroup'")
nrnpython("hArray = h5file.createArray(group, 'VOLTAGE', allData, 'Values of VOLTAGE from cell group: SampleCellGroup')")
nrnpython("hArray.setAttr('Variable', 'VOLTAGE')")
nrnpython("h5file.close()")

//  Saving Gran_NaF_98:m on only one seg, id: 0, in all 4 cells in CellGroup_2


//  Saving vector for segment: Soma(ID: 0)

nrnpython("h5file = tables.openFile('CellGroup_2.Gran_NaF_98_m.h5', mode = 'w', title = 'Arrays of recordings of Gran_NaF_98:m from NEURON')")

print "Using HDF5 save mode: 4"
{nrnpython("allData = numpy.zeros( (h.v_time.size(), 4) , dtype=float )")}
{nrnpython("print allData.shape")}

for i=0, n_CellGroup_2-1 {
    { nrnpython("allData[:,int(h.i)] = h.v_CellGroup_2_seg_Soma_m_Gran_NaF_98[int(h.i)].to_python()")}
}
{nrnpython("group = h5file.createGroup('/', 'CellGroup_2', 'CellGroup_2')")}
nrnpython("group._v_attrs.Population = 'CellGroup_2'")
nrnpython("hArray = h5file.createArray(group, 'Gran_NaF_98_m', allData, 'Values of Gran_NaF_98:m from cell group: CellGroup_2')")
nrnpython("hArray.setAttr('Variable', 'Gran_NaF_98:m')")
nrnpython("h5file.close()")

//  Saving VOLTAGE on only one seg, id: 0, in all 4 cells in CellGroup_2


//  Saving vector for segment: Soma(ID: 0)

nrnpython("h5file = tables.openFile('CellGroup_2.VOLTAGE.h5', mode = 'w', title = 'Arrays of recordings of VOLTAGE from NEURON')")

print "Using HDF5 save mode: 4"
{nrnpython("allData = numpy.zeros( (h.v_time.size(), 4) , dtype=float )")}
{nrnpython("print allData.shape")}

for i=0, n_CellGroup_2-1 {
    { nrnpython("allData[:,int(h.i)] = h.v_CellGroup_2_seg_Soma_v[int(h.i)].to_python()")}
}
{nrnpython("group = h5file.createGroup('/', 'CellGroup_2', 'CellGroup_2')")}
nrnpython("group._v_attrs.Population = 'CellGroup_2'")
nrnpython("hArray = h5file.createArray(group, 'VOLTAGE', allData, 'Values of VOLTAGE from cell group: CellGroup_2')")
nrnpython("hArray.setAttr('Variable', 'VOLTAGE')")
nrnpython("h5file.close()")

//  Saving Gran_CaPool_98:CONC:ca on only one seg, id: 0, in all 4 cells in CellGroup_2


//  Saving vector for segment: Soma(ID: 0)

nrnpython("h5file = tables.openFile('CellGroup_2.Gran_CaPool_98_CONC_ca.h5', mode = 'w', title = 'Arrays of recordings of Gran_CaPool_98:CONC:ca from NEURON')")

print "Using HDF5 save mode: 4"
{nrnpython("allData = numpy.zeros( (h.v_time.size(), 4) , dtype=float )")}
{nrnpython("print allData.shape")}

for i=0, n_CellGroup_2-1 {
    { nrnpython("allData[:,int(h.i)] = h.v_CellGroup_2_seg_Soma_cai[int(h.i)].to_python()")}
}
{nrnpython("group = h5file.createGroup('/', 'CellGroup_2', 'CellGroup_2')")}
nrnpython("group._v_attrs.Population = 'CellGroup_2'")
nrnpython("hArray = h5file.createArray(group, 'Gran_CaPool_98_CONC_ca', allData, 'Values of Gran_CaPool_98:CONC:ca from cell group: CellGroup_2')")
nrnpython("hArray.setAttr('Variable', 'Gran_CaPool_98:CONC:ca')")
nrnpython("h5file.close()")

{ sprint(timeFilename, "%s%s", targetDir, "time.dat")}
{ f_time.wopen(timeFilename) }
{ v_time.printf(f_time) }
{ f_time.close() }

{savetime = stopsw()}

propsFile = new File()
strdef propsFilename
{sprint(propsFilename, "%ssimulator.props", targetDir)}
{propsFile.wopen(propsFilename)}
{propsFile.printf("#This is a list of properties generated by NEURON during the simulation run\n")}
{propsFile.printf("Host=%s\n", host)}
{propsFile.printf("RealSimulationTime=%g\n", realruntime)}
{propsFile.printf("SimulationSaveTime=%g\n", savetime)}
{propsFile.printf("SimulationSetupTime=%g\n", setuptime)}
{propsFile.printf("NEURONversion=%s\n", nrnversion())}
{propsFile.close()}

print "Data stored in ",savetime, "secs in directory: ", targetDir


//   This code pops up a simple Run Control

{
xpanel("RunControl", 0)
v_init = -60.0
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
t = 0
xvalue("t","t", 2 )
tstop = 800.0
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.02
 xvalue("dt","dt", 1,"setdt()", 0, 1 )
xpanel(80,80)
}

