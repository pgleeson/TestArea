
//  ******************************************************

//     File automatically generated by: neuroConstruct

//  ******************************************************


begintemplate BigCell

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target
//   // Some fields for referencing the cells


public reference, type, description
//   // Some methods for referencing the cells


public toString
public all

objref synlist
objref all
strdef reference, type, description

public soma_group
objref soma_group
public dendrite_group
objref dendrite_group
public axon_group
objref axon_group

proc init() {
topol()
subsets()
geom()
biophys()
geom_nseg()
synlist = new List()
synapses()
x = y = z = 0
reference = $s1
type = $s2
description = $s3
}

create Soma
public Soma
create longSection1
public longSection1
create longSection2
public longSection2
create axonSec1
public axonSec1
create axonSec3
public axonSec3
create axonSec4
public axonSec4

proc topol() {
connect longSection1(0), Soma(0.0)
connect longSection2(0), Soma(0.0)
connect axonSec1(0), Soma(1.0)
connect axonSec3(0), axonSec1(1.0)
connect axonSec4(0), axonSec1(1.0)
basic_shape()
}

proc basic_shape() {

// Looking at segment number 0: Soma_0, section: Soma, ID: 0, ROOT SEGMENT, rad: 3.0, (0.0, 10.0, 0.0) -> (0.0, 11.0, 0.0), len: 1 (FINITE VOLUME)
Soma {pt3dclear() pt3dadd(0.0, 10.0, 0.0, 4.0) pt3dadd(0.0, 11.0, 0.0, 6.0)}

// Looking at segment number 1: Soma_1, section: Soma, ID: 1, parent: Soma_0, rad: 4.0, (0.0, 11.0, 0.0) -> (0.0, 13.0, 0.0), len: 2 (FINITE VOLUME)
Soma {pt3dadd(0.0,13.0,0.0, 8.0)}

// Looking at segment number 2: Soma_2, section: Soma, ID: 2, parent: Soma_1, rad: 4.5, (0.0, 13.0, 0.0) -> (0.0, 15.0, 0.0), len: 2 (FINITE VOLUME)
Soma {pt3dadd(0.0,15.0,0.0, 9.0)}

// Looking at segment number 3: Soma_3, section: Soma, ID: 3, parent: Soma_2, rad: 4.0, (0.0, 15.0, 0.0) -> (0.0, 17.0, 0.0), len: 2 (FINITE VOLUME)
Soma {pt3dadd(0.0,17.0,0.0, 8.0)}

// Looking at segment number 4: Soma_4, section: Soma, ID: 10, parent: Soma_3, rad: 3.0, (0.0, 17.0, 0.0) -> (0.0, 18.0, 0.0), len: 1 (FINITE VOLUME)
Soma {pt3dadd(0.0,18.0,0.0, 6.0)}

// Looking at segment number 5: mainDend2, section: longSection1, ID: 11, parent: Soma_0, FRACT ALONG: 0.0, rad: 1.0, (0.0, 10.0, 0.0) -> (10.0, 5.0, 0.0), len: 11.18
longSection1 {pt3dclear() pt3dadd(0.0,10.0,0.0, 3.0) pt3dadd(10.0,5.0,0.0, 2.0)}

// Looking at segment number 6: mainDend3, section: longSection1, ID: 12, parent: mainDend2, rad: 0.5, (10.0, 5.0, 0.0) -> (10.0, -5.0, 0.0), len: 10
longSection1 {pt3dadd(10.0,-5.0,0.0, 1.0)}

// Looking at segment number 7: mainDend4, section: longSection2, ID: 13, parent: Soma_0, FRACT ALONG: 0.0, rad: 1.0, (0.0, 10.0, 0.0) -> (-10.0, 0.0, 0.0), len: 14.142
longSection2 {pt3dclear() pt3dadd(0.0,10.0,0.0, 2.0) pt3dadd(-10.0,0.0,0.0, 2.0)}

// Looking at segment number 8: mainDend5, section: longSection2, ID: 14, parent: mainDend4, rad: 1.0, (-10.0, 0.0, 0.0) -> (-15.0, -10.0, 0.0), len: 11.18
longSection2 {pt3dadd(-15.0,-10.0,0.0, 2.0)}

// Looking at segment number 9: mainAxon, section: axonSec1, ID: 15, parent: Soma_4, rad: 1.0, (0.0, 18.0, 0.0) -> (0.0, 20.0, 0.0), len: 2
axonSec1 {pt3dclear() pt3dadd(0.0,18.0,0.0, 2.0) pt3dadd(0.0,20.0,0.0, 2.0)}

// Looking at segment number 10: subAxon1, section: axonSec3, ID: 16, parent: mainAxon, rad: 1.0, (0.0, 20.0, 0.0) -> (0.0, 30.0, 10.0), len: 14.142
axonSec3 {pt3dclear() pt3dadd(0.0,20.0,0.0, 2.0) pt3dadd(0.0,30.0,10.0, 2.0)}

// Looking at segment number 11: subAxon2, section: axonSec4, ID: 17, parent: mainAxon, rad: 1.0, (0.0, 20.0, 0.0) -> (0.0, 30.0, -10.0), len: 14.142
axonSec4 {pt3dclear() pt3dadd(0.0,20.0,0.0, 2.0) pt3dadd(0.0,30.0,-10.0, 2.0)}
}

proc subsets() { local i
//   The group all is assumed never to change...


all = new SectionList()


soma_group = new SectionList()

Soma soma_group.append()


dendrite_group = new SectionList()

longSection1 dendrite_group.append()
longSection2 dendrite_group.append()


axon_group = new SectionList()

axonSec1 axon_group.append()
axonSec3 axon_group.append()
axonSec4 axon_group.append()


Soma all.append()
longSection1 all.append()
longSection2 all.append()
axonSec1 all.append()
axonSec3 all.append()
axonSec4 all.append()
}

proc geom() {
}

proc geom_nseg() {
Soma nseg = 1
longSection1 nseg = 1
longSection2 nseg = 1
axonSec1 nseg = 1
axonSec3 nseg = 1
axonSec4 nseg = 1
}


proc biophys() {
}

proc position() { local i
Soma for i = 0, n3d()-1 {
pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
}
x = $1  y = $2  z = $3
}

proc connect2target() {
}

proc synapses() {
}

proc toString() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s, description: %s", reference, type, description)
    print info
}


endtemplate BigCell

