
//  ******************************************************

//     File automatically generated by: neuroConstruct

//  ******************************************************


begintemplate SampleCell

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target
//   // Some fields for referencing the cells


public reference, type, description
//   // Some methods for referencing the cells


public toString
public all

objref synlist
objref all
strdef reference, type, description

public soma_group
objref soma_group
public dendrite_group
objref dendrite_group
public axon_group
objref axon_group

proc init() {
topol()
subsets()
geom()
biophys()
geom_nseg()
synlist = new List()
synapses()
x = y = z = 0
reference = $s1
type = $s2
description = $s3
}

create Soma
public Soma
create mainDendSec1
public mainDendSec1
create mainDendSec2
public mainDendSec2
create mainAxonSec
public mainAxonSec
create subAxonSec1
public subAxonSec1
create subAxonSec2
public subAxonSec2

proc topol() {
connect mainDendSec1(0), Soma(0.5)
connect mainDendSec2(0), Soma(0.5)
connect mainAxonSec(0), Soma(0.5)
connect subAxonSec1(0), mainAxonSec(1.0)
connect subAxonSec2(0), mainAxonSec(1.0)
basic_shape()
}

proc basic_shape() {

// Looking at segment number 0: Soma, section: Soma, SPHERICAL, ID: 0, ROOT SEGMENT, rad: 8.0, (0.0, 0.0, 0.0) -> (0.0, 0.0, 0.0) (FINITE VOLUME)
Soma {pt3dclear() pt3dadd(0.0, -8.0, 0.0, 16.0) pt3dadd(0.0, 8.0, 0.0, 16.0)}

// Looking at segment number 1: mainDend1, section: mainDendSec1, ID: 1, parent: Soma, FRACT ALONG: 0.5, rad: 1.0, (0.0, 0.0, 0.0) -> (-10.0, -30.0, 0.0), len: 31.623
mainDendSec1 {pt3dclear() pt3dadd(0,0,0,2.0) pt3dadd(-10.0,-30.0,0.0, 2.0)}

// Looking at segment number 2: mainDend2, section: mainDendSec2, ID: 2, parent: Soma, FRACT ALONG: 0.5, rad: 1.0, (0.0, 0.0, 0.0) -> (10.0, -30.0, 0.0), len: 31.623
mainDendSec2 {pt3dclear() pt3dadd(0,0,0,2.0) pt3dadd(10.0,-30.0,0.0, 2.0)}

// Looking at segment number 3: mainAxon, section: mainAxonSec, ID: 3, parent: Soma, FRACT ALONG: 0.5, rad: 1.0, (0.0, 0.0, 0.0) -> (0.0, 20.0, 0.0), len: 20
mainAxonSec {pt3dclear() pt3dadd(0,0,0,2.0) pt3dadd(0.0,20.0,0.0, 2.0)}

// Looking at segment number 4: subAxon1, section: subAxonSec1, ID: 4, parent: mainAxon, rad: 0.5, (0.0, 20.0, 0.0) -> (0.0, 30.0, 10.0), len: 14.142
subAxonSec1 {pt3dclear() pt3dadd(0.0,20.0,0.0, 2.0) pt3dadd(0.0,30.0,10.0, 1.0)}

// Looking at segment number 5: subAxon2, section: subAxonSec2, ID: 5, parent: mainAxon, rad: 0.5, (0.0, 20.0, 0.0) -> (0.0, 30.0, -10.0), len: 14.142
subAxonSec2 {pt3dclear() pt3dadd(0.0,20.0,0.0, 2.0) pt3dadd(0.0,30.0,-10.0, 1.0)}
}

proc subsets() { local i
//   The group all is assumed never to change...


all = new SectionList()


soma_group = new SectionList()

Soma soma_group.append()


dendrite_group = new SectionList()

mainDendSec1 dendrite_group.append()
mainDendSec2 dendrite_group.append()


axon_group = new SectionList()

mainAxonSec axon_group.append()
subAxonSec1 axon_group.append()
subAxonSec2 axon_group.append()


Soma all.append()
mainDendSec1 all.append()
mainDendSec2 all.append()
mainAxonSec all.append()
subAxonSec1 all.append()
subAxonSec2 all.append()
}

proc geom() {
}

proc geom_nseg() {
Soma nseg = 1
mainDendSec1 nseg = 1
mainDendSec2 nseg = 1
mainAxonSec nseg = 1
subAxonSec1 nseg = 1
subAxonSec2 nseg = 1
}


proc biophys() {
    forsec all {
        insert NaConductance
//   Assuming the rest of the parameters are set in the mod file...

    gmax_NaConductance = 0.12

//           Ion na is used in this process...

ena = 50.0
        insert LeakConductance
//   Assuming the rest of the parameters are set in the mod file...

    gmax_LeakConductance = 3.0E-4

//           Ion non_specific is used in this process...

        insert KConductance
//   Assuming the rest of the parameters are set in the mod file...

    gmax_KConductance = 0.036

//           Ion k is used in this process...

ek = -77.0
    }

}

proc position() { local i
Soma for i = 0, n3d()-1 {
pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
}
x = $1  y = $2  z = $3
}

proc connect2target() {
}

proc synapses() {
}


proc toString() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s, description: %s", reference, type, description)
    print info
}


endtemplate SampleCell

