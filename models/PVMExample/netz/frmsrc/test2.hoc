objref pc
pc = new ParallelContext()


objref vec
vec = new Vector(1000)
index=0

count = 0

proc do() {local i, x

	pc.take("task", &index, vec)
    
    print "<",index,">", "Task index taken = ", index

   strdef host
   system("hostname", host)
   
   print "\n\n<",index,"> -----------------------------------         Task executing on host: ", host
   
    print "<",index,">", "---------------------       Local count: ", count
    
    
    count = count + 1
    
	for i=1,100000 hoc_cross_x_ = i
    
    print "<",index,">", "posting: done..."
	pc.post("done", index, vec.add(vec), host)
}

strdef s
s = "do()\n"

proc submit() {

    print "\n\n............   Calling submit() with arg: ", $1
    
	vec.fill($1)
    
    
    
	pc.post("task", $1, vec)
	pc.submit(s)
}

pc.runworker()


startsw()


for i=1,5 {
	submit(i)
}


for i=1,5 {

     print "\n\n**************    Step number: ", i, "  ************"

while (pc.working()) {

print "\n\npc.working()..."

    strdef host

	pc.take("done", &index, vec, host)
    
     
	print "<",index,">"," Master taken something: ", index, ", ran on host: ", host," sum: ", vec.sum
    
    taskref = 10000 * i
    pc.post("task", taskref, vec)
	pc.submit(s)
    
    /*
	if (i < 5) {
		submit(i)
		i += 1
	}
    */
}

}





print "\n\nEverything done. Total time taken: ", stopsw(), "\n\n"


pc.done()
